{
    
      "II Year I Sem": {
        "OOPJ": {
          "CO1": "Design and implement object-oriented concepts like encapsulation, abstraction and data hiding using programming constructs offered by java language.",
          "CO2": "Realize the power of inheritance, polymorphism, interfaces and packages.",
          "CO3": "Understand and demonstrate the concepts of exception handling and java I/O packages.",
          "CO4": "Demonstrate knowledge and understanding of multithreading, annotations and applets in java.",
          "CO5": "Design and develop java applications using AWT and Swings for providing solutions to real world problems."
        },
        "RDBMS": {
          "CO1": "Perform conceptual modeling and logical design of centralized databases. Data modeling using Entity- Relationship (ER) model. Learn the use of constraints and relational algebra operations.",
          "CO2": "Learn how relational algebra and calculus can be used in SQL. Demonstrate the mathematical approach towards querying the database. Learn DML.",
          "CO3": "Implement the relational database logical design using normalization.",
          "CO4": "Learn the database transaction processing and concurrency control.",
          "CO5": "Learn backup and recovery techniques, Query optimization and PL/SQL."
        },
        "EEE": {
          "CO1": "Identify basic circuit components and solve basic electrical and electronic problems using different principles.",
          "CO2": "Understand the construction and working of different types of DC machines and calculate the losses and efficiency.",
          "CO3": "Understand the Construction and working principle of AC machines and their applications in real time.",
          "CO4": "Analyze and design different types of diodes and rectifiers.",
          "CO5": "Study different transistor biasing methods."
        },
        "BACD": {
          "CO1": "Understand and master different number systems and realize the binary operations of Boolean algebra using logic gates.",
          "CO2": "Solve gate-level minimization problems using K-map and Quine-Mc Cluskey methods.",
          "CO3": "Analyze a given combinational circuit and design a new optimized circuit for a given specification.",
          "CO4": "Analyze a given sequential circuit and design an optimal circuit to implement a memory element or a counter.",
          "CO5": "Realize Programmable logic elements used in the design of processors and embedded systems."
        },
        "P&S": {
          "CO1": "Compute probabilities using theorems in probability and probability distributions.",
          "CO2": "Find estimates of parameters and test hypothesis about parameters.",
          "CO3": "Establish relationship between variables using correlation and regression.",
          "CO4": "Apply the tools in Probability and Statistics in engineering.",
          "CO5": "Take decisions using testing of hypothesis techniques."
        },
        "OOPJ Lab": {
          "CO1": "Implement object-oriented concepts like encapsulation, abstraction and data hiding using programming constructs offered by java language.",
          "CO2": "Develop java programs to realize the power of inheritance, interfaces and packages.",
          "CO3": "Develop java programs to demonstrate the concepts of exception handling and I/O streams.",
          "CO4": "Implement java applications using multithreading mechanism.",
          "CO5": "Use graphical user interfaces to create Applets & Swing applications for providing solutions to real world problems."
        },
        "RDBMS Lab": {
          "CO1": "Explain the underlying concepts of database technologies. Design E-R diagram and implement a database schema for a given problem-domain.",
          "CO2": "Populate and query a database using SQL DML/DDL/TCL commands.",
          "CO3": "Demonstrate the sequence of various clauses (select, from, where, group-by, having) aggregate functions used in writing a query.",
          "CO4": "Demonstrate functions and procedures (IN/OUT) parameters.",
          "CO5": "Declare and enforce integrity constraints on a database, create triggers, cursors and administrative commands."
        },
        "EEE Lab": {
          "CO1": "Simplify and verify various electrical circuits.",
          "CO2": "Conduct investigation on the experimental setup for various electrical circuits.",
          "CO3": "Study working and applications of various electrical machines.",
          "CO4": "Analyze and Design Rectifier circuits.",
          "CO5": "Design the basic transistor biasing techniques."
        }
      },
      "II Year II Sem": {
        "ADSJ": {
          "CO1": "Realize the power of generics in java.",
          "CO2": "Understand Java's Collection class hierarchy and implement stacks, queues, dictionaries and trees using them.",
          "CO3": "Implement dictionaries using linear lists and hashing and compare their performances.",
          "CO4": "Implement dictionaries using various height balanced trees and also analyze the advantages and disadvantages of height balanced trees.",
          "CO5": "Evaluate various patterns and word matching algorithms in terms of their complexity and efficiency."
        },
        "CO": {
          "CO1": "Represent floating-point numbers according to IEEE standard and realize Booth's algorithm for multiplication and division operations on integers.",
          "CO2": "Figure out functional units of the processor such as registers and Arithmetic Logical unit, instruction execution timing, bus operation, addressing modes, instruction formats.",
          "CO3": "Attain the knowledge of micro programming and understand the concepts and design of memory hierarchy.",
          "CO4": "Demonstrate the basics of the system topics: Multi stage instruction pipeline and hazards, super scalar and Parallel architectures.",
          "CO5": "Understand the vector processing and parallelism in terms of a single processor and multi-processors."
        },
        "OS": {
          "CO1": "Acquire basic knowledge about different functions, structures and design features of contemporary operating systems, to aid in apply and solve complex engineering problems.",
          "CO2": "Analyze and formulate the problems, design the solutions, implement and demonstrate different process scheduling, Synchronization, and deadlock related algorithms.",
          "CO3": "Design algorithmic experiments, analyze and interpret the data for different memory management techniques and their implementations.",
          "CO4": "Differentiate and Demonstrate secondary storage structures, file systems, directory structures and their implementations. Select and apply appropriate disk scheduling algorithms.",
          "CO5": "Understand the impact of the different protection and security threats in the context of social, safety, ethical, legal issues and design solutions and mechanisms including access control and information assurance."
        },
        "SE": {
          "CO1": "The student will have a clear understanding of underlying principles of software engineering, software myths and thorough understanding of SE process models.",
          "CO2": "The students will have exposure to requirements engineering process and related system models.",
          "CO3": "The student will be able to appreciate software design process, design quality, design models and will be able to create architectural designs, component designs and UI designs.",
          "CO4": "The students will develop a strategic approach to testing and will be able to appreciate the art of debugging.",
          "CO5": "The students will understand the importance of software metrics and risk management."
        },
        "MFCS": {
          "CO1": "Understand the process of concluding argument validity using propositional and predicate logic.",
          "CO2": "Appreciate the applications of relations and functions with their suitability in the mathematical context.",
          "CO3": "Explore diversified number of combinatorial techniques that form the primitive basics for solving the problems in counting process.",
          "CO4": "Analyze the characteristic properties of algebraic structures for estimating their suitability in the field of Computer Science.",
          "CO5": "Investigate the significance and role of Graph Theory in the process of modelling entities and events in the real time application domains."
        },
        "ADSJ Lab": {
          "CO1": "Implement stacks and queues using user defined generic classes.",
          "CO2": "Implement hashing, sets, stacks and queues using collection classes in java.util package.",
          "CO3": "Implement dictionaries using various data structures like sorted list, and hashing.",
          "CO4": "Implement dictionaries using various height balanced trees and analyze the advantages and disadvantages of height balanced trees.",
          "CO5": "Implement Pattern Matching Algorithms."
        },
        "CASE Tools Lab": {
          "CO1": "Design and implement projects using OO concepts.",
          "CO2": "Use the UML analysis and design diagrams.",
          "CO3": "Create code from design."
        },
        "OS Lab": {
          "CO1": "Choose the best CPU scheduling algorithm for a given problem instance.",
          "CO2": "Understand and implement deadlock avoidance algorithm.",
          "CO3": "Identify the performance of various page replacement algorithms.",
          "CO4": "Understand how file system and directories are managed at Kernel level.",
          "CO5": "Appreciate how multiple processes are run, sharing the physical memory."
        }
      }
    }
  
  